name: CI
on: [push, pull_request]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      PLATFORM: linux64
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive

      @import build-linux.yml

  linux-test:
    needs: linux-build
    runs-on: ubuntu-latest
    env:
      PLATFORM: linux64
      TEST: ${{matrix.target}}
    strategy:
      matrix:
        target: [macro, js, hl, cpp, java, cs, php, python, lua, flash, neko]
        include:
          - target: macro
          - target: js
            # SAUCE: 1
            # SAUCE_TUNNEL_ID: 'linux-test'
            # SAUCE_BUILD: '${{env.GITHUB_RUN_NUMBER}}' # $(Build.BuildNumber)
          - target: hl
            APT_PACKAGES: cmake ninja-build
          - target: cpp
            APT_PACKAGES: gcc-multilib g++-multilib
          - target: java
          - target: cs
          - target: php
          - target: python
          - target: lua
            APT_PACKAGES: ncurses-dev
          - target: flash
            APT_PACKAGES: libglib2.0 libfreetype6 xvfb
            DISPLAY: ':99.0'
            AUDIODEV: 'null'
          - target: neko
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive
      - uses: actions/download-artifact@v1
        with:
          name: linuxBinaries

      @import install-neko.yml

      - name: Setup Haxe
        run: |
          set -ex
          tar -xf linuxBinaries/*_bin.tar.gz -C linuxBinaries --strip-components=1
          sudo mkdir -p /usr/local/bin/
          sudo mkdir -p /usr/local/share/haxe/
          sudo ln -s `pwd`/linuxBinaries/haxe /usr/local/bin/haxe
          sudo ln -s `pwd`/linuxBinaries/haxelib /usr/local/bin/haxelib
          sudo ln -s `pwd`/linuxBinaries/std /usr/local/share/haxe/std

      - name: Print Haxe version
        run: haxe -version

      - name: Setup haxelib
        run: |
          set -ex
          mkdir ~/haxelib
          haxelib setup ~/haxelib

      - name: Install apt packages
        run: |
          set -ex
          sudo apt update -qqy
          sudo apt install -qqy ${{matrix.APT_PACKAGES}}

      - name: Test
        if: (success() && !((${{matrix.SAUCE}} && ${{matrix.SAUCE_ACCESS_KEY}})))
        run: haxe RunCi.hxml
        working-directory: ${{github.workspace}}/tests

      - name: Test (with SauceLabs)
        if: (success() && ${{matrix.SAUCE}} && ${{matrix.SAUCE_ACCESS_KEY}})
        run: haxe RunCi.hxml
        working-directory: ${{github.workspace}}/tests
        env:
          SAUCE_ACCESS_KEY: ${{matrix.SAUCE_ACCESS_KEY}}


